import torch
import torchvision.models as models
import torchvision.transforms as transforms
from PIL import Image
from torchvision.utils import save_image
from torchvision.models import vgg19
from torch import nn, optim

# Load content and style images
content_image = Image.open("content.png")
style_image = Image.open("style.png")

# Transform images
transform = transforms.Compose([
    transforms.Resize((512, 512)),
    transforms.ToTensor()
])

content = transform(content_image).unsqueeze(0)
style = transform(style_image).unsqueeze(0)

# Use VGG19 for feature extraction
vgg = vgg19(pretrained=True).features.eval()

# Define loss layers: content + style
# Define optimizer on input image
# Run backprop to minimize style and content loss
# Final result: stylized image = content in style
